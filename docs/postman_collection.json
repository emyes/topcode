{
	"info": {
		"_postman_id": "6757e07a-ebdc-4a24-afeb-288fb577de63",
		"name": "Doppler App REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth (RUN THESE CALLS FIRST)",
			"item": [
				{
					"name": "login with email and password (new user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1487b2ab-5710-4cf7-8c26-e4f5438bd2ad",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"BEARER_NEW_USER\", \"Bearer \" + jsonData.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user-new@doppler.com\",\n\t\"password\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "- The backend authenticates with SSO (SAML) using the email and password\n- After authentication, the user information will be returned from SAML\n- Check if the user already registered\n- Create or update the user with the information from SAML\n"
					},
					"response": []
				},
				{
					"name": "login with email and password (user1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f5ac7e0-6906-42c4-9993-62e8385b213a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"BEARER_USER1\", \"Bearer \" + jsonData.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user1@doppler.com\",\n\t\"password\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "- The backend authenticates with SSO (SAML) using the email and password\n- After authentication, the user information will be returned from SAML\n- Check if the user already registered\n- Create or update the user with the information from SAML\n"
					},
					"response": []
				},
				{
					"name": "login with email and password (user2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f5ac7e0-6906-42c4-9993-62e8385b213a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"BEARER_USER2\", \"Bearer \" + jsonData.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user2@doppler.com\",\n\t\"password\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "- The backend authenticates with SSO (SAML) using the email and password\n- After authentication, the user information will be returned from SAML\n- Check if the user already registered\n- Create or update the user with the information from SAML\n"
					},
					"response": []
				},
				{
					"name": "login with email and password (user5)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f5ac7e0-6906-42c4-9993-62e8385b213a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"BEARER_USER5\", \"Bearer \" + jsonData.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"user5@doppler.com\",\n\t\"password\": \"pass\"\n}"
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "- The backend authenticates with SSO (SAML) using the email and password\n- After authentication, the user information will be returned from SAML\n- Check if the user already registered\n- Create or update the user with the information from SAML\n"
					},
					"response": []
				}
			],
			"description": "Folder for login"
		},
		{
			"name": "Event",
			"item": [
				{
					"name": "search events",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d210626-581c-4184-becc-3acc7f30c808",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb8749d8-3de7-45bf-8663-e3eebc2910a8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=1&offset=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (paging + sorting)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=1&offset=1&sortBy=firstSessionStart&sortDirection=asc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "firstSessionStart"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (topicId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=1&offset=0&sortBy=firstSessionStart&sortDirection=asc&topicId=00000000-0000-0000-0001-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "firstSessionStart"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								},
								{
									"key": "topicId",
									"value": "00000000-0000-0000-0001-000000000001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (onlyMyEvents)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=3&offset=0&sortBy=firstSessionStart&sortDirection=asc&onlyMyEvents=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "firstSessionStart"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								},
								{
									"key": "onlyMyEvents",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (UPCOMING)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?status=UPCOMING",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "status",
									"value": "UPCOMING"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (PAST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?status=PAST",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "status",
									"value": "PAST"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (all filters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a2d460d-65da-434d-969a-e7e46b3900fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=3&offset=0&sortBy=firstSessionStart&sortDirection=asc&topicId=00000000-0000-0000-0001-000000000001&onlyMyEvents=true&status=UPCOMING",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "firstSessionStart"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								},
								{
									"key": "topicId",
									"value": "00000000-0000-0000-0001-000000000001"
								},
								{
									"key": "onlyMyEvents",
									"value": "true"
								},
								{
									"key": "status",
									"value": "UPCOMING"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4833193-35f3-4b99-84bd-e126115915c4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?limit=0&offset=-1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid sortBy)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d210626-581c-4184-becc-3acc7f30c808",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?sortBy=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid sortDirection)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86d6cf37-403f-4695-bf8c-1004dec10c8e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?sortDirection=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "sortDirection",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid topicId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26735b80-62d4-42b3-b4aa-a94d5b22ea75",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?topicId=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "topicId",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid onlyMyEvents)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccc7bd31-a19c-4527-b17d-b80391ba9777",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?onlyMyEvents=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "onlyMyEvents",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (400 - invalid status)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21a8fac1-45dc-4676-b3f3-c148b7b71667",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events?status=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "status",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search events (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06ec8cb6-6581-48bb-b1a6-78fb80c81a99",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get an event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d18591d8-09c7-496b-b156-89803f40e6b8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001"
							]
						}
					},
					"response": []
				},
				{
					"name": "get an event - 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc72dd58-7f87-4c0f-be73-1761ce5f4764",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "get an event - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75c81bf9-c471-49fe-b411-8bd8483cb99f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001"
							]
						}
					},
					"response": []
				},
				{
					"name": "get an event - 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75c81bf9-c471-49fe-b411-8bd8483cb99f",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009"
							]
						}
					},
					"response": []
				},
				{
					"name": "share the event to other users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "602e3ce2-ab22-4ae9-a19f-155a7698f226",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{ \"userId\": \"00000000-0000-0000-0000-000000000004\" },\n\t{ \"userId\": \"00000000-0000-0000-0000-000000000005\" }\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "688616a5-9aca-4437-aa91-69d0d1052666",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\n]"
						},
						"url": {
							"raw": "{{URL}}/events/invalid/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (400 - empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "688616a5-9aca-4437-aa91-69d0d1052666",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (400 - null item)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "688616a5-9aca-4437-aa91-69d0d1052666",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  null\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (400 - null userId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "688616a5-9aca-4437-aa91-69d0d1052666",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{ \"userId\": null },\n\t{ \"userId\": \"00000000-0000-0000-0000-000000000005\" }\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b50fafbf-971e-493c-9cfd-53a59ba81f40",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{ \"userId\": \"00000000-0000-0000-0000-000000000005\" }\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				},
				{
					"name": "share the event to other users (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b50fafbf-971e-493c-9cfd-53a59ba81f40",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{ \"userId\": \"00000000-0000-0000-0000-000000000005\" }\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/share",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"share"
							]
						},
						"description": "- share the event by creating new notifications for the specified users about the event - the notification message should be configurable\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "User Event",
			"item": [
				{
					"name": "register the current logged-in user to an event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5149b689-cbfc-4c6a-8367-0d5173faa917",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000004/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000004",
								"register"
							]
						},
						"description": "- Make sure that the user has not registered to the event yet\n- Add a new `UserEvent`\n- Add a new `UserRewardPoint` for registering to the event, the points should be taken from the `Event.points`\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "register the current logged-in user to an event (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bff667d-d15d-40b5-9692-f0f7b7a41586",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"register"
							]
						},
						"description": "- Make sure that the user has not registered to the event yet\n- Add a new `UserEvent`\n- Add a new `UserRewardPoint` for registering to the event, the points should be taken from the `Event.points`\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "register the current logged-in user to an event (400 - already)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bff667d-d15d-40b5-9692-f0f7b7a41586",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"register"
							]
						},
						"description": "- Make sure that the user has not registered to the event yet\n- Add a new `UserEvent`\n- Add a new `UserRewardPoint` for registering to the event, the points should be taken from the `Event.points`\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "register the current logged-in user to an event (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11712f5e-52a4-4131-a574-e012cd6126e2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"register"
							]
						},
						"description": "- Make sure that the user has not registered to the event yet\n- Add a new `UserEvent`\n- Add a new `UserRewardPoint` for registering to the event, the points should be taken from the `Event.points`\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "register the current logged-in user to an event (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1162060-f69f-4cc1-85ac-ae98d4ba83c8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"register"
							]
						},
						"description": "- Make sure that the user has not registered to the event yet\n- Add a new `UserEvent`\n- Add a new `UserRewardPoint` for registering to the event, the points should be taken from the `Event.points`\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "get all attendees of a specific event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a21a91f1-abd1-4396-b375-58fc4e3fccd9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/attendees",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"attendees"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all attendees of a specific event (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eed6bc83-6727-4d6f-ac87-41b32382aa06",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/attendees",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"attendees"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all attendees of a specific event (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30166bfc-9a9e-4b84-b2a3-fb42969024f8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/attendees",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"attendees"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all attendees of a specific event (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8946e7b8-1b5b-46d8-850d-3f83661339a5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/attendees",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"attendees"
							]
						}
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04d422a8-3318-4410-b218-ae0bd5c0da06",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000002/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000002",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/invalid/scanTicket?=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"scanTicket"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (400 - not registered)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000005/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000005",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (400 - already scanned)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (400 - non-existed userId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000009\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_M2M}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000009\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (403 - user token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50689a5a-12ba-48b5-8cf1-9b2486914d6b",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000009\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "confirm the atttendance to the event (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33ae076f-60c3-41ef-b8ec-8e7c32493bec",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_M2M}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/scanTicket",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"scanTicket"
							]
						},
						"description": "- Make sure that the user has not scan the ticket yet (UserEvent.ticketScanned = false)\n- Update the `UserEvent.ticketScanned` to true\n- Add a new `UserRewardPoint` for attending the event, the points should be taken from the `Event` or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Comment",
			"item": [
				{
					"name": "search event comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "894606f4-c7c6-4b15-a7c7-6b5b8a440d46",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "894606f4-c7c6-4b15-a7c7-6b5b8a440d46",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (paging + sorting)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "894606f4-c7c6-4b15-a7c7-6b5b8a440d46",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=1&sortBy=likeCount&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "likeCount"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (paging + sorting createdAt)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "894606f4-c7c6-4b15-a7c7-6b5b8a440d46",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=1&sortBy=createdAt&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de2585f5-c8f5-4122-ab6a-cf4b249c2dce",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/comments?limit=1&offset=1&sortBy=likeCount&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "likeCount"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (400 - invalid paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de2585f5-c8f5-4122-ab6a-cf4b249c2dce",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=0&offset=-1&sortBy=likeCount&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "sortBy",
									"value": "likeCount"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (400 - invalid sortBy)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de2585f5-c8f5-4122-ab6a-cf4b249c2dce",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=0&sortBy=invalid&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "invalid"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (400 - invalid sortDirection)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de2585f5-c8f5-4122-ab6a-cf4b249c2dce",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=0&sortBy=createdAt&sortDirection=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortDirection",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cfa3604-0b70-4870-b234-4168260b6909",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments?limit=1&offset=0&sortBy=createdAt&sortDirection=asc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search event comments (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7091e762-6dac-4a91-b406-7f87418ba66a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments?limit=1&offset=0&sortBy=createdAt&sortDirection=asc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortDirection",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1199746-4899-4ef0-8d46-c5f7d6e12d94",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"new content\",\n\t\"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (child)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1199746-4899-4ef0-8d46-c5f7d6e12d94",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"new content 2\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eb4b788-350e-45c5-a417-2972d19c229c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"new content 2\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/invalid/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (400 - missing content)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eb4b788-350e-45c5-a417-2972d19c229c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (400 - non-existed parentCommentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eb4b788-350e-45c5-a417-2972d19c229c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000009\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (400 - parentCommentId diff event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eb4b788-350e-45c5-a417-2972d19c229c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000005\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (400 - more than 2 levels)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eb4b788-350e-45c5-a417-2972d19c229c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000003\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d8577b6-b559-406c-b574-d949ead66bca",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000003\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new comment (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2799141c-91bb-48c7-bf10-0be6122fe3c4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000003\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85302317-1088-40d0-b74e-d1400e765f1e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content - updated\",\n\t\"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000002",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000002"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (updated parent)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85302317-1088-40d0-b74e-d1400e765f1e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content - updated 2\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content - updated 2\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/000invalid/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"000invalid",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - invalid commentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content - updated 2\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - missing content)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - diff event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"test\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - non-existed parentCommentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000009\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - parentCommentId diff event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000005\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - more than 2 levels)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000002\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000001"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (400 - sub to itself)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dbe5602-a5aa-4000-94cc-0cbd575d78c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000001"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0550322b-362a-432e-a5fb-14bbac03de8b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": \"00000000-0000-0000-0000-000000000001\"\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000001",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000001"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (403 - other user's comment)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca66b06b-4f3c-4a59-a467-43b8ef700dde",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000002/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000002",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be395482-2c0d-42fc-86de-63e033d4cdee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an event comment (404 - commentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be395482-2c0d-42fc-86de-63e033d4cdee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"content\",\n\t\"parentCommentId\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000009",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000009"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e934fc90-c68a-4f10-856d-b8f4c9de1625",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000002/comments/00000000-0000-0000-0000-000000000005/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000002",
								"comments",
								"00000000-0000-0000-0000-000000000005",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment (400 - liked already)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877a963a-bfb4-496c-8b2b-0cf4768fd0d4",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000002/comments/00000000-0000-0000-0000-00000000005/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000002",
								"comments",
								"00000000-0000-0000-0000-00000000005",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877a963a-bfb4-496c-8b2b-0cf4768fd0d4",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments/00000000-0000-0000-0000-000000000009/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments",
								"00000000-0000-0000-0000-000000000009",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment (403 - own comment)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877a963a-bfb4-496c-8b2b-0cf4768fd0d4",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000003/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000003",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment (404 - non-existed comment)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877a963a-bfb4-496c-8b2b-0cf4768fd0d4",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000009/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000009",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "like an event comment (404 - non-existed event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877a963a-bfb4-496c-8b2b-0cf4768fd0d4",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments/00000000-0000-0000-0000-000000000009/like",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments",
								"00000000-0000-0000-0000-000000000009",
								"like"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000001/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000001",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/comments/00000000-0000-0000-0000-000000000001/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"comments",
								"00000000-0000-0000-0000-000000000001",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment (404 - non-existed comment)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000009/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000009",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment (404 - non-existed event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments/00000000-0000-0000-0000-000000000001/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments",
								"00000000-0000-0000-0000-000000000001",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlike an event comment (404 - not liked yet)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c3d357-04e6-4a93-ab8a-0f11733eca28",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004/unlike",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004",
								"unlike"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1147cf59-ae70-4834-aee5-539d372d826b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "444f2320-fb1f-432e-9518-cbd51d08eaee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (400 - invalid commentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "444f2320-fb1f-432e-9518-cbd51d08eaee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"invalid"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (400 - diff event)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "444f2320-fb1f-432e-9518-cbd51d08eaee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1143bc1c-179e-401d-ad56-7bf0544bab7a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000004",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000004"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (403 - other user's comment)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81ae7f70-688c-46af-9b95-08396610372f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000002/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000002",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69d112e5-38c7-430c-a1ad-bdef68a72eca",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/comments/00000000-0000-0000-0000-000000000005",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"comments",
								"00000000-0000-0000-0000-000000000005"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete an event comment (404 - commentId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69d112e5-38c7-430c-a1ad-bdef68a72eca",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/comments/00000000-0000-0000-0000-000000000009",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"comments",
								"00000000-0000-0000-0000-000000000009"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Topic",
			"item": [
				{
					"name": "get all topics",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29ae1825-36e2-4d5f-81ac-fa2266f1aa84",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/topics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"topics"
							]
						},
						"description": "the results should be sorted by name ascending"
					},
					"response": []
				},
				{
					"name": "get all topics (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7b831a9-4f38-4bcd-9178-ca3785b4f791",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/topics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"topics"
							]
						},
						"description": "the results should be sorted by name ascending"
					},
					"response": []
				}
			],
			"description": "Folder for topics"
		},
		{
			"name": "User Topic",
			"item": [
				{
					"name": "get all user topics for the logged-in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78adc70e-8225-47d8-9850-cdefac95322c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all user topics for the logged-in user (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78adc70e-8225-47d8-9850-cdefac95322c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						}
					},
					"response": []
				},
				{
					"name": "update the user topics for the logged-in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d5ed0cd-eebb-4696-b04e-6d77c7f1760f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000001\",\n        \"topicId\": \"00000000-0000-0000-0001-000000000001\"\n    },\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000002\",\n        \"topicId\": \"00000000-0000-0000-0001-000000000002\"\n    },\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000003\",\n        \"topicId\": \"00000000-0000-0000-0001-000000000003\"\n    },\n    {\n        \"topicId\": \"00000000-0000-0000-0001-000000000005\"\n    }\n]"
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						},
						"description": "- Delete all user topics in database that the `id` is not present in the request body\n- For each item in the request body\n\n  - If the `id` is present, check if the id exists and update the user topic\n  - If the `id` is not present, create the user topic\n\n- If the user is a new user (isNew = true) and there is at least 1 user topic\n  - Update user `isNew` flag to false\n  - Add a new `UserRewardPoint` for completing the user profile, the points should be configurable\n  - Add the points to the `User.points`\n  - Return the `UserRewardPoint`\n\n- Return null\n"
					},
					"response": []
				},
				{
					"name": "update the user topics for the logged-in user (new user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efd5feef-559e-43a4-91b9-ac00c59a4deb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER5}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"topicId\": \"00000000-0000-0000-0001-000000000004\"\n    }\n]"
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						},
						"description": "- Delete all user topics in database that the `id` is not present in the request body\n- For each item in the request body\n\n  - If the `id` is present, check if the id exists and update the user topic\n  - If the `id` is not present, create the user topic\n\n- If the user is a new user (isNew = true) and there is at least 1 user topic\n  - Update user `isNew` flag to false\n  - Add a new `UserRewardPoint` for completing the user profile, the points should be configurable\n  - Add the points to the `User.points`\n  - Return the `UserRewardPoint`\n\n- Return null\n"
					},
					"response": []
				},
				{
					"name": "update the user topics for the logged-in user (400 - null topicId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efd5feef-559e-43a4-91b9-ac00c59a4deb",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"topicId\": null\n    }\n]"
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						},
						"description": "- Delete all user topics in database that the `id` is not present in the request body\n- For each item in the request body\n\n  - If the `id` is present, check if the id exists and update the user topic\n  - If the `id` is not present, create the user topic\n\n- If the user is a new user (isNew = true) and there is at least 1 user topic\n  - Update user `isNew` flag to false\n  - Add a new `UserRewardPoint` for completing the user profile, the points should be configurable\n  - Add the points to the `User.points`\n  - Return the `UserRewardPoint`\n\n- Return null\n"
					},
					"response": []
				},
				{
					"name": "update the user topics for the logged-in user (400 - non-existed topicId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efd5feef-559e-43a4-91b9-ac00c59a4deb",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"topicId\": \"00000000-0000-0000-0001-000000000009\"\n    }\n]"
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						},
						"description": "- Delete all user topics in database that the `id` is not present in the request body\n- For each item in the request body\n\n  - If the `id` is present, check if the id exists and update the user topic\n  - If the `id` is not present, create the user topic\n\n- If the user is a new user (isNew = true) and there is at least 1 user topic\n  - Update user `isNew` flag to false\n  - Add a new `UserRewardPoint` for completing the user profile, the points should be configurable\n  - Add the points to the `User.points`\n  - Return the `UserRewardPoint`\n\n- Return null\n"
					},
					"response": []
				},
				{
					"name": "update the user topics for the logged-in user (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efd5feef-559e-43a4-91b9-ac00c59a4deb",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"topicId\": \"00000000-0000-0000-0001-000000000001\"\n    }\n]"
						},
						"url": {
							"raw": "{{URL}}/userTopics",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userTopics"
							]
						},
						"description": "- Delete all user topics in database that the `id` is not present in the request body\n- For each item in the request body\n\n  - If the `id` is present, check if the id exists and update the user topic\n  - If the `id` is not present, create the user topic\n\n- If the user is a new user (isNew = true) and there is at least 1 user topic\n  - Update user `isNew` flag to false\n  - Add a new `UserRewardPoint` for completing the user profile, the points should be configurable\n  - Add the points to the `User.points`\n  - Return the `UserRewardPoint`\n\n- Return null\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Carousel",
			"item": [
				{
					"name": "get all carousels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9915c3e-b6fc-4efb-bf90-0a07d839dc42",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/carousels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"carousels"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all carousels (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9915c3e-b6fc-4efb-bf90-0a07d839dc42",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/carousels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"carousels"
							]
						}
					},
					"response": []
				}
			],
			"description": "Folder for topics"
		},
		{
			"name": "User Setting",
			"item": [
				{
					"name": "get the current logged-in user settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b4bd805-1c18-49d4-b6ff-3fdfbdd80581",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/userSettings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the current logged-in user settings (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b4bd805-1c18-49d4-b6ff-3fdfbdd80581",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/userSettings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create or update the current logged-in user settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54ee44ed-adb8-41a3-8959-5c2defbf4f2c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notifiedByNewEvents\": false\n}"
						},
						"url": {
							"raw": "{{URL}}/userSettings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create or update the current logged-in user settings (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54ee44ed-adb8-41a3-8959-5c2defbf4f2c",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notifiedByNewEvents\": null\n}"
						},
						"url": {
							"raw": "{{URL}}/userSettings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create or update the current logged-in user settings (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54ee44ed-adb8-41a3-8959-5c2defbf4f2c",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notifiedByNewEvents\": false\n}"
						},
						"url": {
							"raw": "{{URL}}/userSettings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"userSettings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "search users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f2b3ea-bed2-48a6-90d2-7a4d298a02ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "search users (paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f2b3ea-bed2-48a6-90d2-7a4d298a02ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/users?limit=1&offset=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "2"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search users (keyword)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f2b3ea-bed2-48a6-90d2-7a4d298a02ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/users?limit=5&offset=0&keyword=dop",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "keyword",
									"value": "dop"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search users (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f2b3ea-bed2-48a6-90d2-7a4d298a02ac",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/users?limit=0&offset=-1&keyword=dop",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "keyword",
									"value": "dop"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search users (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f2b3ea-bed2-48a6-90d2-7a4d298a02ac",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/users?limit=0&offset=-1&keyword=dop",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "keyword",
									"value": "dop"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reward",
			"item": [
				{
					"name": "search rewards",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=1&offset=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (paging + sorting)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=5&offset=0&sortBy=pointsRequired&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "pointsRequired"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=0&offset=-1&sortBy=pointsRequired&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "sortBy",
									"value": "pointsRequired"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (400 - invalid sortBy)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=1&offset=1&sortBy=id&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "id"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (400 - invalid sortDirection)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=1&offset=1&sortBy=title&sortDirection=invalid",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "sortBy",
									"value": "title"
								},
								{
									"key": "sortDirection",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search rewards (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2aae934-eb8d-458e-95a5-1c505848c697",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/rewards?limit=0&offset=-1&sortBy=pointsRequired&sortDirection=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "sortBy",
									"value": "pointsRequired"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "redeem a reward",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "933b21e5-a6c4-46fb-bf8d-95ea2e8b20fc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/rewards/00000000-0000-0000-0000-000000000001/redeem",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards",
								"00000000-0000-0000-0000-000000000001",
								"redeem"
							]
						},
						"description": "- Make sure that the `User.points` is not less than the required points `Reward.pointsRequired`\n- Deduct the user points\n- Create and return the user reward\n"
					},
					"response": []
				},
				{
					"name": "redeem a reward (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "933b21e5-a6c4-46fb-bf8d-95ea2e8b20fc",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/rewards/invalid/redeem",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards",
								"invalid",
								"redeem"
							]
						},
						"description": "- Make sure that the `User.points` is not less than the required points `Reward.pointsRequired`\n- Deduct the user points\n- Create and return the user reward\n"
					},
					"response": []
				},
				{
					"name": "redeem a reward (400 - not enough points)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "933b21e5-a6c4-46fb-bf8d-95ea2e8b20fc",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_NEW_USER}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/rewards/00000000-0000-0000-0000-000000000001/redeem",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards",
								"00000000-0000-0000-0000-000000000001",
								"redeem"
							]
						},
						"description": "- Make sure that the `User.points` is not less than the required points `Reward.pointsRequired`\n- Deduct the user points\n- Create and return the user reward\n"
					},
					"response": []
				},
				{
					"name": "redeem a reward (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "933b21e5-a6c4-46fb-bf8d-95ea2e8b20fc",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER5}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/rewards/00000000-0000-0000-0000-000000000001/redeem",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards",
								"00000000-0000-0000-0000-000000000001",
								"redeem"
							]
						},
						"description": "- Make sure that the `User.points` is not less than the required points `Reward.pointsRequired`\n- Deduct the user points\n- Create and return the user reward\n"
					},
					"response": []
				},
				{
					"name": "redeem a reward (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "933b21e5-a6c4-46fb-bf8d-95ea2e8b20fc",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/rewards/00000000-0000-0000-0000-000000000009/redeem",
							"host": [
								"{{URL}}"
							],
							"path": [
								"rewards",
								"00000000-0000-0000-0000-000000000009",
								"redeem"
							]
						},
						"description": "- Make sure that the `User.points` is not less than the required points `Reward.pointsRequired`\n- Deduct the user points\n- Create and return the user reward\n"
					},
					"response": []
				},
				{
					"name": "get my rewards",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36682bcc-df8a-47db-838b-38446f44621d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myRewards",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myRewards"
							]
						}
					},
					"response": []
				},
				{
					"name": "get my rewards (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36682bcc-df8a-47db-838b-38446f44621d",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myRewards",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myRewards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "get my badges",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c23cf09b-b6d8-4775-a4ad-33c6f0edb01a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myBadges",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myBadges"
							]
						}
					},
					"response": []
				},
				{
					"name": "get my badges (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c23cf09b-b6d8-4775-a4ad-33c6f0edb01a",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myBadges",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myBadges"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the history of the reward points",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73488d8c-cad1-4431-b21a-79a85f86da41",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myRewardPoints",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myRewardPoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the history of the reward points (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73488d8c-cad1-4431-b21a-79a85f86da41",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/myRewardPoints",
							"host": [
								"{{URL}}"
							],
							"path": [
								"myRewardPoints"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "search notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a7b200c-dc9f-4867-9a0b-a8f73b7c1eda",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications"
							]
						},
						"description": "the results should be sorted by createdAt descending"
					},
					"response": []
				},
				{
					"name": "search notifications (paging)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a7b200c-dc9f-4867-9a0b-a8f73b7c1eda",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications?limit=1&offset=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						},
						"description": "the results should be sorted by createdAt descending"
					},
					"response": []
				},
				{
					"name": "search notifications (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a7b200c-dc9f-4867-9a0b-a8f73b7c1eda",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications?limit=0&offset=-1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								}
							]
						},
						"description": "the results should be sorted by createdAt descending"
					},
					"response": []
				},
				{
					"name": "search notifications (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a7b200c-dc9f-4867-9a0b-a8f73b7c1eda",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications?limit=0&offset=-1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								},
								{
									"key": "offset",
									"value": "-1"
								}
							]
						},
						"description": "the results should be sorted by createdAt descending"
					},
					"response": []
				},
				{
					"name": "mark a notification as read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76c839ca-4aa0-4ed9-9d62-8a44bbcdc202",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications/00000000-0000-0000-0000-000000000001/read",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications",
								"00000000-0000-0000-0000-000000000001",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "mark a notification as read (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76c839ca-4aa0-4ed9-9d62-8a44bbcdc202",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications/invalid/read",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications",
								"invalid",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "mark a notification as read (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76c839ca-4aa0-4ed9-9d62-8a44bbcdc202",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications/00000000-0000-0000-0000-000000000001/read",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications",
								"00000000-0000-0000-0000-000000000001",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "mark a notification as read (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76c839ca-4aa0-4ed9-9d62-8a44bbcdc202",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER5}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications/00000000-0000-0000-0000-000000000001/read",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications",
								"00000000-0000-0000-0000-000000000001",
								"read"
							]
						}
					},
					"response": []
				},
				{
					"name": "mark a notification as read (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76c839ca-4aa0-4ed9-9d62-8a44bbcdc202",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER5}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/notifications/00000000-0000-0000-0000-000000000009/read",
							"host": [
								"{{URL}}"
							],
							"path": [
								"notifications",
								"00000000-0000-0000-0000-000000000009",
								"read"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Survey",
			"item": [
				{
					"name": "get the survey questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the survey questions (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the survey questions (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the survey questions (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000003/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000003",
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the survey questions (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"survey"
							]
						}
					},
					"response": []
				},
				{
					"name": "submit the survey answers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{BEARER_USER1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000001\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000001\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000001\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000001\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000001\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000001\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/invalid/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (400 - no answer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (400 - null answer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\tnull,\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000001\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": null,\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (403 - not attended)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": null,\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000003/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000003",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (403 - already submitted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": null,\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the survey answers (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\t\"surveyQuestionId\": null,\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000002\",\n\t\t\"selectedSurveyAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\n\t\t\"textAnswer\": null\n\t},\n\t{\n\t\t\"surveyQuestionId\": \"00000000-0000-0000-0004-000000000003\",\n\t\t\"selectedSurveyAnswerOptionId\": null,\n\t\t\"textAnswer\": \"a free text\"\n\t}\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/survey",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"survey"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Quiz",
			"item": [
				{
					"name": "get the quiz questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the quiz questions (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/invalid/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"quiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the quiz questions (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the quiz questions (403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000003/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000003",
								"quiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "get the quiz questions (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c372efa-c420-4223-bc05-fa1f4a0ce5ee",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"quiz"
							]
						}
					},
					"response": []
				},
				{
					"name": "submit the quiz answers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000001\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000001\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/invalid/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"invalid",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (400 - no answer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (400 - null answer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\tnull,\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (403 - not attended)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000003/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000003",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (403 - already submitted)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000001/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000001",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				},
				{
					"name": "submit the quiz answers (404)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f398ce2-b33f-4dda-aadc-9d9cd284e338",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{BEARER_USER2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000001\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000011\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000002\",\r\n\t\t\"selectedQuizAnswerOptionId\": \"00000000-0000-0000-0005-000000000002\",\r\n\t\t\"textAnswer\": null\r\n\t},\r\n\t{\r\n\t\t\"quizQuestionId\": \"00000000-0000-0000-0004-000000000003\",\r\n\t\t\"selectedQuizAnswerOptionId\": null,\r\n\t\t\"textAnswer\": \"a free text\"\r\n\t}\r\n]"
						},
						"url": {
							"raw": "{{URL}}/events/00000000-0000-0000-0002-000000000009/quiz",
							"host": [
								"{{URL}}"
							],
							"path": [
								"events",
								"00000000-0000-0000-0002-000000000009",
								"quiz"
							]
						},
						"description": "- Add a new `UserRewardPoint` for completing the survey, the points should be got from the event or configuration\n- Add the points to the `User.points`\n- Return the `UserRewardPoint`\n"
					},
					"response": []
				}
			]
		}
	]
}